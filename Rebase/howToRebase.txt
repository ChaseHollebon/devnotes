How to do a Git Rebase?
How to update branch to the latest Development?
-----------------------------------------------
1. Make sure your branch is clean (everything has been committed and pushed up)

2. Get the latest development branch    ( cd into the Parent directory & make sure your not in development branch )
    a. CMD> git branch -D development         // Delete the development branch
    b. CMD> git fetch -a                      // Get the latest development branch
    c. CMD> git checkout development

 3. Checkout the branch you want to rebase

 4. Pull Git -> Rebase

 5. ( If there is a pop-up )
    a. Uncheck "Interactive"
    b. In the "onto", choose development (or the branch with other people's changes)
    c. Click "Rebase"

 6. Resolve conflicts (if there are any)


 7. Compile your code

    b. CMD> cd.. (if in Frontend directory)
       CMD> mvn clean package -Pprod


 8. If it compiles perfectly, then do a force push
    a. CMD> git push -f                         // This does a “force push”, which will push your rebased local branch with the updated merges.
  OR------------------------------------
    a. Pull  Git -> Push -> Force Push




How to apply commits from one branch to another

Procedure
---------
  1. Switch to the *SOURCE* branch
     unix> cd ~/intellijProjects/angularAPp1
     unix> git checkout SOURCE_BRANCH

  2. List the commit ids  (in the SOURCE branch)
     unix> cd ~/intellijProjects/angularApp1
     unix> git log --format=oneline

	 c6f0a145efb84514c5319708cd8bb62bd5aa5edc   (holds commit of changes)
     c0478b557713fb69673da310994980fe494a1155   (previous commit)

  3. Generate the patch (that holds the changes)
     unix> git diff --full-index c0478b557713fb69673da310994980fe494a1155 c6f0a145efb84514c5319708cd8bb62bd5aa5edc > change.patch
                                 [commit-id before]                           [last commit id]

  4. Checkout the DESTINATION branch
     unix> git checkout DESTINATION_BRANCH

  5. Apply the change to the DESTINATION branch
     unix> git apply --verbose change.patch

  6. Erase the patch file
     unix> rm change.patch