How to use the Async Pipe
-------------------------


	TypeScript
	----------
	1. Add a class variable
				public obsStuff: Observable<SomeDTO>;

	2. Inject your service
	   NOTE:  Has a public method that either invokes a REAL REST call or fake data

	     constructor(private formBuilder: FormBuilder,
                     private myValidatorsServiceService: MyValidatorsServiceService){
         }

         public myForm: FormGroup;
         public savedSuccessfully: boolean = false;
         public showErrorMessage: boolean = false;
         public showSubRegion: boolean = false;




         public regionValidator(): ValidatorFn{
           return (control: AbstractControl) => {
             let subRegionControl = this.myForm?.get('subRegion');
             if (control.value) {
               if (control.value == 1) {
                 // Show the sub-region field and make it required
                 this.showSubRegion = true;
                 subRegionControl?.setValidators(Validators.required)
               } else {
                 // Hide the sub-region field and make it optional
                 this.showSubRegion = false;
                 subRegionControl?.setValidators(null)
               }
             } else {
               // Hide the sub-region field and make it optional
               this.showSubRegion = false;
               subRegionControl?.setValidators(null)
             }
             return null;
           }
         }


	3. Initialize the observable in ngOnInit()

		public ngOnInit(): void {

			// Initialize the myForm object

			// Initialize the observable
			this.obsStuff = this.myFavoriteService.getStuff(); 
		}


 public ngOnInit(): void {
    // Initialize the myForm Object
    this.myForm = this.formBuilder.group({
      reportName:     [null, Validators.required],
      source:         [null, null],
      priority:       [null, null],
      classification: [null, Validators.required],
      authors:        [null, this.validateAuthors() ]
    },{
      validators: this.isSourceIsraelAndPriorityCritical()
    })
  }

	4. Use the async pipe to invoke it

		<ng-container *ngIf="( this.obsStuff | async ) as dto">



		</ng-container>

<ng-container *ngIf="this.showSubRegion">

</ng-container>


    5. Matt-error using aync validator

     <mat-error>{{ this.myForm.controls.authors.errors?.custom_error }}</mat-error>








PROBLEM:  I want to load a form with data from the REST call
-------------------------------------------------------------


		public ngOnInit(): void {

			// Initialize the myForm object
			this.myForm = ....
			

			// Initialize the observable
			this.obsStuff = this.myFavoriteService.getStuff().pipe( tap( (aData: SomeDTO) => {
				// You get to see the data *BEFORE* the html page renders
			
				// Load the form fields
				this.myForm.controls['description'].setValue( )

			}) )


		}



