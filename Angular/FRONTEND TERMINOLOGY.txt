Frontend Terminology
--------------------
	
	"Generate a DTO"
	-- Go to the terminal
	-- Use the ng generate class <name of DTO> to generate the class
	-- Stands for Data Transfer Object / It is a glorified envelope


			export class MyDTO {
				public description:     string;
				public id:              number;
				public myListOfStuff:   MyStuff[]
			}	


	"Component"  ("Angular Component")
	 -- Building block of a web page / Lego piece
	 -- It is a TypeScript class
	 -- It is different from a service in that a component has HTML and CSS  (Service does not)
     -- It is different from a service in that a component has a registered route  (Service does not)
     -- It is different from a service in that a component has a SELECTOR:                                   <app-my-component>   </app-my-component>
     -- It is different from a service in that a component DIES      when you leave the page
     -- It is different from a service in that a component is CREATED when you leave the page 


			click on page1
			+------------------------------------------------
			|       
			|
            +-------+----------------------------------------
			|       |
            | page1 |      This is Page 1
            | page2 |                            needs the myService
            +-------+----------------------------------------
      


            click on page 2  
              a. Router destroys page1 
              b. Router creates  page2
			+------------------------------------------------
			|       
			|
            +-------+----------------------------------------
			|       |
            | page1 |      This is Page 2
            | page2 |    
            +-------+----------------------------------------
      



	"Service"    ("Angular Service")
	-- It's a class
	-- It does not have HTML or CSS
    -- Service sticks around
	-- It's how reuse code in Angular Web Apps (that don't have look & feel)
    -- Are injected
    -- Angular provides services that we can use -- the router, the formBuilder


			constructor( private myService: MyService,
						 private router: Router,
						 private formBuilder: FormBuilder ) { 

			}




	"Class Variable"
		It's not a local variable
		It can be used in any method inside the CURRENT class
		We declare a class variable by
			
				public/private/protected   variableName: variableType:

					public	myForm:  FormGroup;				
		





	"Local Variable"
		We declare a local variable
			let myData: string = "hi mom";







	"Passed-in Variable"
		-- Passed-in argument to a method
		-- Variable should start with a lower case a  (for argument)

				public getAllAlerts( aCaseId: number ) :    AlertDTO[] {
					let myInfo: number = 27;


					if (myInfo == 27) {
							let myString: string = 'hi mom';
					}

				}
		



